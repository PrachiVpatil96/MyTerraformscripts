apiVersion: apps/v1
kind: Deployment
metadata:
  name: rabbitmq-deploy
  namespace: pitstop-namespace
  labels:
    app: rabbitmq
spec:
  minReadySeconds: 5
  replicas: 2
  selector:
    matchLabels:
      app: rabbitmq
  template:
    metadata:
      labels:
        app: rabbitmq
    spec:
      containers:
      - name: rabbitmq
        image: rabbitmq:3-management-alpine
        ports:
        - containerPort: 15672
          protocol: TCP
        - containerPort: 5672
          protocol: TCP
        env:
        - name: RABBITMQ_CONFIG_FILE
          value: /etc/pitstop/rabbitmq.conf
        volumeMounts:
        - name: rabbitmq-data
          mountPath: /var/lib/rabbitmq
        - name: rabbitmq-config
          mountPath: /etc/pitstop
      volumes:
      - name: rabbitmq-data
        persistentVolumeClaim:
          claimName: rabbitmq-pvc
      - name: rabbitmq-config
        configMap:
          name: rabbitmq-config

---
apiVersion: v1
kind: Service
metadata:
  name: rabbitmq-service
  namespace: pitstop-namespace
  labels:
    app: rabbitmq
spec:
  ports:
  - port: 15672
    targetPort: 15672
    name: management-ui
  - port: 5672
    targetPort: 5672
    name: amqp
  selector:
    app: rabbitmq
  type: ClusterIP

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: rabbitmq-pv
  namespace: pitstop-namespace
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: rabbitmq-storage
  hostPath: 
    path: "/mnt/data/rabbitmq" # Adjust path for your environment

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: rabbitmq-pvc
  namespace: pitstop-namespace
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: rabbitmq-storage
